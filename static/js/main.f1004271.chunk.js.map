{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","message","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,GACZC,QAAS,2BAHb,EAcEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZJ,WAAYG,EAAME,IAClBJ,QAAQ,4BAAD,OAA8BE,EAAME,IAApC,QAjBb,uDAME,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAX/C,oBAqBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BF,KAAKT,MAAME,gBAxBhD,GAAyBU,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.f1004271.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React from 'react';\n\ntype State = {\n  pressedKey: string;\n  message: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n    message: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n      message: `The last pressed key is [${event.key}]`,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.message}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}